{% extends 'base.html.twig' %}
{% block title %}Calendrier{% endblock %}

{% block stylesheets %}
    <style>
        #calendrier{
            width: 100%;
            margin: auto;
        }

  .fc {
            background-color: #f0f0f0;
        }
        
        /* Change the color of the day headers */
        .fc-day-header {
            background-color: #000000;
            color: #333;
        }
        
        /* Change the color of the event background */
        .fc-event {
            background-color: #337ab7;
            border-color: #2e6da4;
            color: #fff;
        }
a {
  color: black;
  text-decoration: none;
}

    </style>
{% endblock %}
 {% block contentsq %}
   <div id="calendrier">
    </div>
 
 {% endblock %}
 
{% block javascripts %}
<script>
window.onload = () => {
    let calendarElt = document.querySelector("#calendrier")

    let calendar = new FullCalendar.Calendar(calendarElt, {
        initialView: 'dayGridMonth',
        eventContent: function(arg) {
            let eventTitle = `${arg.event.title}<br>${arg.event.extendedProps.description}`;
            return { html: '<div class="event-content">' + eventTitle + '</div>' };
        },
        events: function(info, successCallback, failureCallback) {
            fetch('{{ path('fetch_seances') }}')
                .then(response => response.json())
                .then(data => {
                    let events = data.map(event => ({
              title: `<img src="{{ asset('Photos/') }}${event.categorie}" alt="Image" style="width: 100px; height: 100px;"> ${event.typeSeance}`,
                        start: event.dateFin,
                        extendedProps: {
                            description: `nombre MAX: ${event.nb_Maximal}`,
                            
                        }
                    }));
                    successCallback(events);
                })
                .catch(error => {
                    console.error('Error fetching events:', error);
                    failureCallback(error);
                });
        },
        eventDidMount: function(info) {
            // Customize event rendering if needed
        }
    });

    calendar.render()
}
</script>

{% endblock %}

 {% block formSeance %}
 {% endblock %}
  {% block bodyse %}
 {% endblock %}